{"version":3,"sources":["../src/lib/utils.ts","../src/components/ui/input.tsx","../src/components/BlockEditor.tsx","../src/store/Field.tsx","../src/store/JsonValue.ts","../src/components/ui/button.tsx","../src/store/ArrayField.tsx","../src/components/ui/label.tsx","../src/components/ui/accordion.tsx","../src/components/ui/checkbox.tsx","../src/store/CheckboxField.tsx","../src/store/NumberField.tsx","../src/components/ui/select.tsx","../src/store/SelectField.tsx","../src/store/TextField.tsx","../src/store/MediaField.tsx","../src/components/ui/dialog.tsx","../src/store/TextareaField.tsx","../src/components/ui/textarea.tsx","../src/store/ExternalField.tsx","../src/store/Block.ts","../src/store/Node.ts","../src/store/RootStore.ts","../src/store/index.ts","../src/components/Canvas.tsx","../src/components/ui/dropdown-menu.tsx","../src/PageBuilder.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n","'use client'\nimport { Input } from '@/components/ui/input'\nimport { observer } from 'mobx-react-lite'\nimport { useStore } from '@/store'\nimport { FieldComponent } from '@/store/Field'\nimport { Label } from '@/components/ui/label'\nimport { startCase } from 'lodash'\n\nexport const BlockEditor = observer(() => {\n  const store = useStore()\n  const node = store.selectedNode\n  const component = store.selectedBlock\n  if (!node || !component) return null\n\n  return (\n    <div key={node.id} className=\"flex flex-col gap-4\">\n      <h2 className=\"text-lg font-bold\">{startCase(component.type)}</h2>\n      <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n        <Label htmlFor=\"block-name\">Block Name</Label>\n        <Input\n          id=\"block-name\"\n          value={node.name}\n          onChange={(e) => store.renameNode(node.id, e.target.value)}\n        />\n      </div>\n      <hr />\n      {component.fields.map((field) => (\n        <FieldComponent key={field.name} field={field} node={node} path={[]} />\n      ))}\n    </div>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { ArrayField, ArrayFieldComponent } from './ArrayField'\nimport { CheckboxField, CheckboxFieldComponent } from './CheckboxField'\nimport { Node } from './Node'\nimport { NumberField, NumberFieldComponent } from './NumberField'\nimport { SelectField, SelectFieldComponent } from './SelectField'\nimport { TextField, TextFieldComponent } from './TextField'\nimport { MediaField, MediaFieldComponent } from './MediaField'\nimport { TextareaField } from '@/store/TextareaField'\nimport { TextareaFieldComponent } from '@/store/TextareaField'\nimport { ExternalField, ExternalFieldComponent } from './ExternalField'\n\nexport const Field = types.union(\n  TextField,\n  NumberField,\n  CheckboxField,\n  SelectField,\n  ArrayField,\n  MediaField,\n  TextareaField,\n  ExternalField,\n)\n\nexport const FieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof Field>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    return (\n      <>\n        {field.type === 'text' && <TextFieldComponent field={field} node={node} path={path} />}\n        {field.type === 'number' && <NumberFieldComponent field={field} node={node} path={path} />}\n        {field.type === 'checkbox' && (\n          <CheckboxFieldComponent field={field} node={node} path={path} />\n        )}\n        {field.type === 'select' && <SelectFieldComponent field={field} node={node} path={path} />}\n        {field.type === 'array' && <ArrayFieldComponent field={field} node={node} path={path} />}\n        {field.type === 'media' && <MediaFieldComponent field={field} node={node} path={path} />}\n        {field.type === 'textarea' && (\n          <TextareaFieldComponent field={field} node={node} path={path} />\n        )}\n        {field.type === 'external' && (\n          <ExternalFieldComponent field={field} node={node} path={path} />\n        )}\n      </>\n    )\n  },\n)\n","import { types } from 'mobx-state-tree'\n\nexport const JsonValue = types.custom({\n  name: 'JSON',\n  fromSnapshot: (value: any) => value,\n  toSnapshot: (value: any) => value,\n  isTargetType: () => true,\n  getValidationMessage: () => '',\n})\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n","import { JsonValue } from '@/store/JsonValue'\nimport { Node } from '@/store/Node'\nimport { Button } from '@/components/ui/button'\nimport { observer } from 'mobx-react-lite'\nimport { IAnyType, Instance, types } from 'mobx-state-tree'\nimport { Field, FieldComponent } from './Field'\nimport { startCase } from 'lodash'\nimport { Label } from '@/components/ui/label'\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from '@/components/ui/accordion'\nimport React from 'react'\n\nexport const ArrayField = types\n  .model('ArrayField', {\n    name: types.identifier,\n    type: types.literal('array'),\n    fields: types.array(types.late((): IAnyType => Field)),\n    defaultValue: types.optional(types.array(JsonValue), []),\n  })\n  .views((self) => ({\n    getRows: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as any[]) ?? []\n    },\n  }))\n  .actions((self) => ({\n    addRow: (node: Instance<typeof Node>, path: string[]) => {\n      const rows = self.getRows(node, path)\n      if (!rows) return\n      node.setPropValue(path, [...rows, {}])\n    },\n    removeRow: (node: Instance<typeof Node>, path: string[], index: number) => {\n      const rows = self.getRows(node, path)\n      if (!rows) return\n      node.setPropValue(\n        path,\n        rows.filter((_, i) => i !== index),\n      )\n    },\n  }))\n\nexport const ArrayFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof ArrayField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const rows = field.getRows(node, [...path, field.name])\n    const [openRow, setOpenRow] = React.useState<string | undefined>(undefined)\n\n    return (\n      <div>\n        <div className=\"flex justify-between items-center\">\n          <Label>{startCase(field.name)}</Label>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={() => {\n              field.addRow(node, [...path, field.name])\n            }}\n          >\n            Add\n          </Button>\n        </div>\n        <Accordion type=\"single\" collapsible value={openRow} onValueChange={setOpenRow}>\n          {rows.map((row, index) => {\n            const rowKey = index.toString()\n            return (\n              <AccordionItem key={rowKey} value={rowKey}>\n                <AccordionTrigger className=\"text-sm\">Item {index + 1}</AccordionTrigger>\n                <AccordionContent>\n                  <div className=\"flex flex-col gap-2\">\n                    {field.fields.map((nestedField) => (\n                      <FieldComponent\n                        key={nestedField.name}\n                        field={nestedField}\n                        node={node}\n                        path={[...path, field.name, index.toString()]}\n                      />\n                    ))}\n                    <Button\n                      size=\"sm\"\n                      variant=\"secondary\"\n                      onClick={() => field.removeRow(node, [...path, field.name], index)}\n                    >\n                      Remove\n                    </Button>\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n            )\n          })}\n        </Accordion>\n      </div>\n    )\n  },\n)\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"border-b last:border-b-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(\n          \"focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon className=\"text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\nfunction AccordionContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Content>) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm\"\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n","import { Node } from '@/store/Node'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { Label } from '@/components/ui/label'\nimport { startCase } from 'lodash'\nimport { useId } from 'react'\n\nexport const CheckboxField = types\n  .model('CheckboxField', {\n    name: types.identifier,\n    type: types.literal('checkbox'),\n    defaultValue: types.optional(types.boolean, false),\n  })\n  .views((self) => ({\n    getValue: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as boolean) ?? self.defaultValue\n    },\n  }))\n  .actions((self) => ({\n    setValue: (node: Instance<typeof Node>, path: string[], value: boolean) => {\n      node.setPropValue(path, value)\n    },\n  }))\n\nexport const CheckboxFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof CheckboxField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const id = useId()\n    return (\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox\n          id={id}\n          checked={field.getValue(node, [...path, field.name])}\n          onCheckedChange={(checked) =>\n            field.setValue(node, [...path, field.name], Boolean(checked))\n          }\n        />\n        <Label htmlFor={id}>{startCase(field.name)}</Label>\n      </div>\n    )\n  },\n)\n","import { Input } from '@/components/ui/input'\nimport { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { useStoreHistory } from '.'\nimport { Node } from './Node'\nimport { Label } from '@/components/ui/label'\nimport { startCase } from 'lodash'\nimport { useId } from 'react'\n\nexport const NumberField = types\n  .model('NumberField', {\n    name: types.identifier,\n    type: types.literal('number'),\n    defaultValue: types.optional(types.number, 0),\n  })\n  .views((self) => ({\n    getValue: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as number) ?? self.defaultValue\n    },\n  }))\n  .actions((self) => ({\n    setValue: (node: Instance<typeof Node>, path: string[], value: number) => {\n      node.setPropValue(path, value)\n    },\n  }))\n\nexport const NumberFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof NumberField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const id = useId()\n    const history = useStoreHistory()\n    return (\n      <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n        <Label htmlFor={id}>{startCase(field.name)}</Label>\n        <Input\n          id={id}\n          type=\"number\"\n          value={field.getValue(node, [...path, field.name])}\n          onChange={(e) => field.setValue(node, [...path, field.name], e.target.valueAsNumber)}\n          onFocus={() => history.startGroup(() => {})}\n          onBlur={() => history.stopGroup()}\n        />\n      </div>\n    )\n  },\n)\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n","import { Node } from '@/store/Node'\nimport { Select, SelectContent, SelectItem, SelectTrigger } from '@/components/ui/select'\nimport { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { Label } from '@/components/ui/label'\nimport { startCase } from 'lodash'\nimport { useId } from 'react'\n\nexport const SelectField = types\n  .model('SelectField', {\n    name: types.identifier,\n    type: types.literal('select'),\n    defaultValue: types.optional(types.string, ''),\n    options: types.array(types.model({ label: types.string, value: types.string })),\n  })\n  .views((self) => ({\n    getValue: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as string) ?? self.defaultValue\n    },\n  }))\n  .actions((self) => ({\n    setValue: (node: Instance<typeof Node>, path: string[], value: string) => {\n      node.setPropValue(path, value)\n    },\n  }))\n\nexport const SelectFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof SelectField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const id = useId()\n    const value = field.getValue(node, [...path, field.name])\n    const label = field.options.find((option) => option.value === value)?.label\n    return (\n      <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n        <Label htmlFor={id}>{startCase(field.name)}</Label>\n        <Select\n          value={value}\n          onValueChange={(value) => field.setValue(node, [...path, field.name], value)}\n        >\n          <SelectTrigger id={id}>{label}</SelectTrigger>\n          <SelectContent>\n            {field.options.map((option) => (\n              <SelectItem key={option.value} value={option.value}>\n                {option.label}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n      </div>\n    )\n  },\n)\n","import { Input } from '@/components/ui/input'\nimport { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { useStoreHistory } from '.'\nimport { Node } from './Node'\nimport { Label } from '@/components/ui/label'\n// start case\nimport { startCase } from 'lodash'\nimport { useId } from 'react'\n\nexport const TextField = types\n  .model('TextField', {\n    name: types.identifier,\n    type: types.literal('text'),\n    defaultValue: types.optional(types.string, ''),\n  })\n  .views((self) => ({\n    getValue: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as string) ?? self.defaultValue\n    },\n  }))\n  .actions((self) => ({\n    setValue: (node: Instance<typeof Node>, path: string[], value: string) => {\n      console.log('setValue', path, value)\n      node.setPropValue(path, value)\n    },\n  }))\n\nexport const TextFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof TextField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const id = useId()\n    const history = useStoreHistory()\n    return (\n      <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n        <Label htmlFor={id}>{startCase(field.name)}</Label>\n        <Input\n          id={id}\n          value={field.getValue(node, [...path, field.name])}\n          onChange={(e) => field.setValue(node, [...path, field.name], e.target.value)}\n          onFocus={() => history.startGroup(() => {})}\n          onBlur={() => history.stopGroup()}\n        />\n      </div>\n    )\n  },\n)\n","import { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { useStoreHistory } from '.'\nimport { Node } from './Node'\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog'\nimport { useState, useId } from 'react'\nimport { Label } from '@/components/ui/label'\nimport { startCase } from 'lodash'\n\nexport const MediaField = types\n  .model('MediaField', {\n    name: types.identifier,\n    type: types.literal('media'),\n    defaultValue: types.optional(types.string, ''),\n  })\n  .views((self) => ({\n    getValue: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as string) ?? self.defaultValue\n    },\n  }))\n  .actions((self) => ({\n    setValue: (node: Instance<typeof Node>, path: string[], value: string) => {\n      node.setPropValue(path, value)\n    },\n  }))\n\nexport const MediaFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof MediaField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const history = useStoreHistory()\n    const fullPath = [...path, field.name]\n    const value = field.getValue(node, fullPath)\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const [inputValue, setInputValue] = useState(value || '')\n    const id = useId()\n\n    const handleUrlSubmit = () => {\n      history.withoutUndo(() => {\n        field.setValue(node, fullPath, inputValue)\n      })\n      setDialogOpen(false)\n    }\n\n    return (\n      <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n        <Label htmlFor={id}>{startCase(field.name)}</Label>\n        <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"outline\" className=\"w-full\">\n              {value ? 'Change Media' : 'Select Media'}\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-4xl h-[80vh]\">\n            <DialogHeader>\n              <DialogTitle>Enter Media URL</DialogTitle>\n            </DialogHeader>\n            <div className=\"flex gap-2 p-4\">\n              <Input\n                type=\"url\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                placeholder=\"Enter image or media URL\"\n                className=\"flex-1\"\n              />\n              <Button onClick={handleUrlSubmit}>Set Media</Button>\n            </div>\n            {inputValue && (\n              <div className=\"p-4\">\n                <img \n                  src={inputValue} \n                  alt=\"Preview\" \n                  className=\"max-w-full h-auto\"\n                  onError={(e) => {\n                    const target = e.target as HTMLImageElement\n                    target.style.display = 'none'\n                  }}\n                />\n              </div>\n            )}\n          </DialogContent>\n        </Dialog>\n        {value && (\n          <div className=\"mt-2\">\n            <img \n              src={value} \n              alt=\"Selected media\" \n              className=\"max-w-full h-auto max-h-32 object-contain\"\n            />\n          </div>\n        )}\n      </div>\n    )\n  },\n)","\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n","import { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { useStoreHistory } from '.'\nimport { Node } from './Node'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Label } from '@/components/ui/label'\nimport { startCase } from 'lodash'\nimport { useId, useState } from 'react'\nimport {\n  Dialog,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { ExpandIcon } from 'lucide-react'\n\nexport const TextareaField = types\n  .model('TextareaField', {\n    name: types.identifier,\n    type: types.literal('textarea'),\n    defaultValue: types.optional(types.string, ''),\n  })\n  .views((self) => ({\n    getValue: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as string) ?? self.defaultValue\n    },\n  }))\n  .actions((self) => ({\n    setValue: (node: Instance<typeof Node>, path: string[], value: string) => {\n      node.setPropValue(path, value)\n    },\n  }))\n\nexport const TextareaFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof TextareaField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const history = useStoreHistory()\n    const fullPath = [...path, field.name]\n    const value = field.getValue(node, fullPath)\n    const id = useId()\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const [dialogValue, setDialogValue] = useState(value)\n\n    const handleChange = (newValue: string) => {\n      history.withoutUndo(() => {\n        field.setValue(node, fullPath, newValue)\n      })\n    }\n\n    const handleDialogSave = () => {\n      handleChange(dialogValue)\n      setDialogOpen(false)\n    }\n\n    return (\n      <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor={id}>{startCase(field.name)}</Label>\n          <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>\n            <DialogTrigger asChild>\n              <Button size=\"icon\" variant=\"ghost\" className=\"h-6 w-6\">\n                <ExpandIcon className=\"h-4 w-4\" />\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"max-w-4xl\">\n              <DialogHeader>\n                <DialogTitle>{startCase(field.name)}</DialogTitle>\n              </DialogHeader>\n              <div className=\"grid gap-4\">\n                <Textarea\n                  value={dialogValue}\n                  onChange={(e) => setDialogValue(e.target.value)}\n                  className=\"min-h-[400px] font-mono\"\n                />\n                <div className=\"flex justify-end gap-2\">\n                  <Button variant=\"outline\" onClick={() => setDialogOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button onClick={handleDialogSave}>Save</Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n        <Textarea\n          id={id}\n          value={value}\n          onChange={(e) => handleChange(e.target.value)}\n          className=\"min-h-[100px]\"\n        />\n      </div>\n    )\n  },\n)","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n","import { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { observer } from 'mobx-react-lite'\nimport { Instance, types } from 'mobx-state-tree'\nimport { useStoreHistory } from '.'\nimport { Node } from './Node'\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog'\nimport { useState, useEffect, useId, useRef } from 'react'\nimport { Label } from '@/components/ui/label'\nimport { startCase } from 'lodash'\n\nexport const ExternalField = types\n  .model('ExternalField', {\n    name: types.identifier,\n    type: types.literal('external'),\n    defaultValue: types.optional(types.string, ''),\n    endpoint: types.string,\n  })\n  .views((self) => ({\n    getValue: (node: Instance<typeof Node>, path: string[]) => {\n      return (node.getPropValue(path) as string) ?? self.defaultValue\n    },\n  }))\n  .actions((self) => ({\n    setValue: (node: Instance<typeof Node>, path: string[], value: string) => {\n      node.setPropValue(path, value)\n    },\n  }))\n\ninterface ExternalItem {\n  id: string\n  label: string\n}\n\ninterface ExternalResponse {\n  results: ExternalItem[]\n  pagination: {\n    page: number\n    pageSize: number\n    totalCount: number\n    totalPages: number\n    hasNextPage: boolean\n    hasPreviousPage: boolean\n  }\n}\n\nexport const ExternalFieldComponent = observer(\n  ({\n    field,\n    node,\n    path,\n  }: {\n    field: Instance<typeof ExternalField>\n    node: Instance<typeof Node>\n    path: string[]\n  }) => {\n    const history = useStoreHistory()\n    const id = useId()\n    const buttonRef = useRef<HTMLButtonElement>(null)\n    const value = field.getValue(node, [...path, field.name])\n    const [open, setOpen] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isLoadingSelected, setIsLoadingSelected] = useState(false)\n    const [selectedItem, setSelectedItem] = useState<ExternalItem | null>(null)\n    const [searchQuery, setSearchQuery] = useState('')\n    const [debouncedSearch, setDebouncedSearch] = useState('')\n    const [page, setPage] = useState(1)\n    const pageSize = 10\n    const [response, setResponse] = useState<ExternalResponse>({\n      results: [],\n      pagination: {\n        page: 1,\n        pageSize,\n        totalCount: 0,\n        totalPages: 1,\n        hasNextPage: false,\n        hasPreviousPage: false,\n      },\n    })\n\n    // Computed values\n    const items = response.results || []\n    const pagination = response.pagination\n    const hasNextPage = pagination.hasNextPage\n    const hasPrevPage = pagination.hasPreviousPage\n    const totalPages = pagination.totalPages\n    const totalCount = pagination.totalCount\n\n    // Fetch selected item by ID\n    const fetchSelectedItem = async (itemId: string) => {\n      if (!itemId) {\n        setSelectedItem(null)\n        return\n      }\n\n      try {\n        setIsLoadingSelected(true)\n        const url = new URL(field.endpoint, window.location.origin)\n        url.searchParams.set('id', itemId)\n\n        const response = await fetch(url.toString())\n\n        if (!response.ok) {\n          console.error('Failed to fetch selected item')\n          setSelectedItem(null)\n          return\n        }\n\n        const data: ExternalResponse = await response.json()\n        if (data.results && data.results.length > 0) {\n          setSelectedItem(data.results[0] || null)\n        } else {\n          setSelectedItem(null)\n        }\n      } catch (error) {\n        console.error('Error fetching selected item:', error)\n        setSelectedItem(null)\n      } finally {\n        setIsLoadingSelected(false)\n      }\n    }\n\n    // Fetch selected item when component loads or value changes\n    useEffect(() => {\n      if (value) {\n        fetchSelectedItem(value)\n      } else {\n        setSelectedItem(null)\n      }\n    }, [value, field.endpoint])\n\n    const fetchItems = async (searchTerm?: string, pageNum = 1) => {\n      try {\n        setIsLoading(true)\n\n        const url = new URL(field.endpoint, window.location.origin)\n        url.searchParams.set('page', pageNum.toString())\n        url.searchParams.set('pageSize', pageSize.toString())\n\n        if (searchTerm) {\n          url.searchParams.set('search', searchTerm)\n        }\n\n        const response = await fetch(url.toString())\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch items')\n        }\n\n        const data: ExternalResponse = await response.json()\n        setResponse(data)\n      } catch (error) {\n        console.error('Error fetching items:', error)\n        setResponse({\n          results: [],\n          pagination: {\n            page: 1,\n            pageSize: 50,\n            totalCount: 0,\n            totalPages: 1,\n            hasNextPage: false,\n            hasPreviousPage: false,\n          },\n        })\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    // Handle search query changes with debounce\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        setDebouncedSearch(searchQuery)\n        setPage(1) // Reset to first page when search changes\n      }, 300)\n\n      return () => clearTimeout(timer)\n    }, [searchQuery])\n\n    // Fetch items when dialog opens or search/page changes\n    useEffect(() => {\n      if (open) {\n        fetchItems(debouncedSearch, page)\n      }\n    }, [open, debouncedSearch, page, field.endpoint])\n\n    const handleSelectItem = (item: ExternalItem) => {\n      field.setValue(node, [...path, field.name], item.id)\n      setSelectedItem(item)\n      setOpen(false)\n    }\n\n    const goToNextPage = () => {\n      if (hasNextPage) {\n        setPage((prevPage) => prevPage + 1)\n      }\n    }\n\n    const goToPrevPage = () => {\n      if (hasPrevPage) {\n        setPage((prevPage) => prevPage - 1)\n      }\n    }\n\n    return (\n      <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n        <Label htmlFor={id} onClick={() => buttonRef.current?.click()} className=\"cursor-pointer\">\n          {startCase(field.name)}\n        </Label>\n        <div className=\"flex gap-2\">\n          <Input\n            id={id}\n            value={value}\n            onChange={(e) => field.setValue(node, [...path, field.name], e.target.value)}\n            onFocus={() => history.startGroup(() => {})}\n            onBlur={() => history.stopGroup()}\n            className=\"flex-1\"\n            placeholder=\"Item ID\"\n          />\n          <Dialog open={open} onOpenChange={setOpen}>\n            <DialogTrigger asChild>\n              <Button ref={buttonRef} type=\"button\" variant=\"outline\" size=\"sm\">\n                Select\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-[680px] h-[80vh] flex flex-col\">\n              <DialogHeader className=\"shrink-0\">\n                <DialogTitle>Select Item</DialogTitle>\n              </DialogHeader>\n\n              <div className=\"shrink-0 mb-4\">\n                <Input\n                  placeholder=\"Search items...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full\"\n                />\n              </div>\n\n              {isLoading ? (\n                <div className=\"flex-1 flex items-center justify-center\">Loading items...</div>\n              ) : (\n                <>\n                  <div className=\"flex-1 space-y-2 overflow-y-auto min-h-0\">\n                    {items.length > 0 ? (\n                      items.map((item) => (\n                        <div\n                          key={item.id}\n                          className={`border rounded-md p-3 cursor-pointer hover:border-primary transition-colors ${value === item.id ? 'border-primary ring-1 ring-primary bg-primary/5' : ''}`}\n                          onClick={() => handleSelectItem(item)}\n                        >\n                          <div className=\"font-medium\">{item.label}</div>\n                          <div className=\"text-xs text-muted-foreground\">{item.id}</div>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n                        No items found\n                      </div>\n                    )}\n                  </div>\n\n                  {(hasNextPage || hasPrevPage) && (\n                    <div className=\"shrink-0 flex items-center justify-between mt-4 pt-4 border-t\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={goToPrevPage}\n                        disabled={!hasPrevPage}\n                      >\n                        Previous\n                      </Button>\n\n                      <span className=\"text-sm text-muted-foreground\">\n                        Page {page} of {totalPages} ({totalCount} items)\n                      </span>\n\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={goToNextPage}\n                        disabled={!hasNextPage}\n                      >\n                        Next\n                      </Button>\n                    </div>\n                  )}\n                </>\n              )}\n            </DialogContent>\n          </Dialog>\n        </div>\n        {value && (\n          <div className=\"mt-1 border rounded p-2 bg-muted/50\">\n            {isLoadingSelected ? (\n              <div className=\"text-sm text-muted-foreground\">Loading item...</div>\n            ) : selectedItem ? (\n              <div className=\"text-sm\">\n                <div className=\"font-medium\">{selectedItem.label}</div>\n                <div className=\"text-xs text-muted-foreground\">{selectedItem.id}</div>\n              </div>\n            ) : (\n              <div className=\"text-sm text-muted-foreground\">Item not found</div>\n            )}\n          </div>\n        )}\n      </div>\n    )\n  },\n)\n","import { Field } from '@/store/Field'\nimport { types, Instance, SnapshotIn } from 'mobx-state-tree'\n\nexport const Block = types.model('Block', {\n  type: types.identifier,\n  fields: types.array(Field),\n})\n\nexport type BlockType = Instance<typeof Block>\nexport type BlockSnapshotIn = SnapshotIn<typeof Block>\n","import { JsonValue } from '@/store/JsonValue'\nimport { get as getPath, set as setPath } from 'lodash'\nimport { IAnyModelType, Instance, cast, getSnapshot, types } from 'mobx-state-tree'\n\nexport const Node = types\n  .model('Node', {\n    id: types.optional(types.identifier, () => Math.random().toString(36).substring(2, 15)),\n    name: types.string,\n    type: types.string,\n    open: types.optional(types.boolean, true),\n    props: types.map(JsonValue),\n    children: types.union(types.array(types.late((): IAnyModelType => Node)), types.undefined),\n  })\n  .views((self) => ({\n    getPropValue(path: string[]) {\n      return getPath(getSnapshot(self.props), path.join('.'))\n    },\n    getOpenMap() {\n      const result: Record<string, boolean> = {}\n      result[self.id] = self.open\n      for (const child of self.children ?? []) {\n        Object.assign(result, child.getOpenMap())\n      }\n      return result\n    },\n  }))\n  .actions((self) => ({\n    findNode(id: string) {\n      if (self.id === id) return self\n      if (!self.children) return null\n      for (const child of self.children) {\n        const node = child.findNode(id)\n        if (node) return node\n      }\n      return null\n    },\n    insertNodes(index: number, nodes: Instance<typeof self>[]) {\n      self.children?.splice(index, 0, ...nodes)\n    },\n    setPropValue(path: string[], value: any) {\n      const snapshot = structuredClone(getSnapshot(self.props))\n      self.props = cast(setPath(snapshot, path.join('.'), value))\n    },\n    toggle() {\n      self.open = !self.open\n    },\n    getSnapshotWithoutId() {\n      return {\n        ...getSnapshot(self),\n        id: undefined,\n        children: self.children?.map((child) => child.getSnapshotWithoutId()),\n      }\n    },\n  }))\n","import { Block } from '@/store/Block'\nimport { Node } from '@/store/Node'\nimport {\n  Instance,\n  destroy,\n  detach,\n  flow,\n  getParentOfType,\n  getSnapshot,\n  types,\n} from 'mobx-state-tree'\n\nconst APP_CLIPBOARD_MIME = 'application/x-page-editor-node'\n\nexport const RootStore = types\n  .model('RootStore', {\n    root: Node,\n    selectedNode: types.maybeNull(types.reference(Node)),\n    blocks: types.array(Block),\n  })\n  .views((self) => ({\n    get data() {\n      return self.root.children ? getSnapshot(self.root.children, false) : []\n    },\n    get openMap() {\n      return self.root.getOpenMap()\n    },\n  }))\n  .actions((self) => ({\n    findNode: (id: string): Instance<typeof Node> | null => {\n      return self.root.findNode(id)\n    },\n  }))\n  .actions((self) => ({\n    deleteNodes: (ids: string[]) => {\n      for (const id of ids) {\n        const node = self.findNode(id)\n        if (!node) continue\n        if (node.id === self.selectedNode?.id) {\n          const parent = getParentOfType(node, Node)\n          console.log('parent', parent && getSnapshot(parent))\n          self.selectedNode = parent\n        }\n        destroy(node)\n      }\n    },\n    renameNode: (id: string, name: string) => {\n      const node = self.findNode(id)\n      if (node) {\n        node.name = name\n      }\n    },\n    createNode: (parentId: string | null, _index: number, type: string) => {\n      const parent = self.findNode(parentId ?? 'root')\n      if (!parent) return null\n      const node = Node.create({\n        name: type,\n        type,\n        children: [],\n      })\n      parent.insertNodes(parent.children?.length ?? 0, [node])\n      console.log('before', self.selectedNode && getSnapshot(self.selectedNode))\n      self.selectedNode = node\n      console.log('after', getSnapshot(self.selectedNode))\n      return getSnapshot(node)\n    },\n    moveNodes: (parentId: string | null, index: number, dragIds: string[]) => {\n      const parent = self.findNode(parentId ?? 'root')\n      if (!parent) return\n      const nodes: Instance<typeof Node>[] = []\n      for (const dragId of dragIds) {\n        const node = self.findNode(dragId)\n        if (!node) continue\n        nodes.push(node)\n        detach(node)\n      }\n      parent.insertNodes(index, nodes)\n    },\n    selectNode: (id: string) => {\n      self.selectedNode = self.findNode(id)\n    },\n    setData: (data: any) => {\n      self.root.children = data\n    },\n    duplicateNode: (id: string) => {\n      const node = self.findNode(id)\n      if (!node) return\n      const parent = getParentOfType(node, Node)\n      if (!parent) return\n      const newNode = Node.create({\n        ...node.getSnapshotWithoutId(),\n        name: `${node.name} (copy)`,\n      })\n      parent.insertNodes(parent.children?.length ?? 0, [newNode])\n      self.selectedNode = newNode\n    },\n    copyNode: (id: string) => {\n      const node = self.findNode(id)\n      if (!node) return\n      navigator.clipboard.writeText(\n        JSON.stringify({\n          type: APP_CLIPBOARD_MIME,\n          node: node.getSnapshotWithoutId(),\n        }),\n      )\n    },\n    pasteNode: flow(function* (parentId: string = 'root') {\n      const parent = self.findNode(parentId)\n      if (!parent) return\n      const data = yield getClipboardData()\n      if (!data || data.type !== APP_CLIPBOARD_MIME || !data.node) return\n      const newNode = Node.create({ ...data.node, name: `${data.node.name} (pasted)` })\n      parent.insertNodes(0, [newNode])\n      self.selectedNode = newNode\n    }),\n  }))\n  .views((self) => ({\n    get selectedBlock() {\n      const node = self.selectedNode\n      if (!node) return null\n      return self.blocks.find((block) => block.type === node.type)\n    },\n  }))\n\nasync function getClipboardData() {\n  let clipboardText\n  try {\n    clipboardText = await navigator.clipboard.readText()\n  } catch {\n    return\n  }\n  let data\n  try {\n    data = JSON.parse(clipboardText)\n  } catch {\n    return\n  }\n  return data\n}\n","import { RootStore } from '@/store/RootStore'\nimport { Instance } from 'mobx-state-tree'\nimport { UndoManager } from 'mst-middlewares'\nimport { createContext, useContext } from 'react'\nimport { BlockSnapshotIn } from '@/store/Block'\n\nexport function createStoreAndHistory(blocks: BlockSnapshotIn[]) {\n  const store = RootStore.create({\n    root: {\n      id: 'root',\n      name: 'Root',\n      type: 'root',\n    },\n    blocks,\n  })\n  const history = UndoManager.create({}, { targetStore: store })\n  return { store, history }\n}\n\nexport const StoreContext = createContext<Instance<typeof RootStore> | null>(null)\nexport const StoreProvider = StoreContext.Provider\nexport const StoreHistoryContext = createContext<Instance<typeof UndoManager> | null>(null)\nexport const StoreHistoryProvider = StoreHistoryContext.Provider\n\nexport const useStore = () => {\n  const store = useContext(StoreContext)\n  if (!store) {\n    throw new Error('useStore must be used within a StoreProvider')\n  }\n  return store\n}\n\nexport const useStoreHistory = () => {\n  const history = useContext(StoreHistoryContext)\n  if (!history) {\n    throw new Error('useStoreHistory must be used within a StoreHistoryProvider')\n  }\n  return history\n}\n","'use client'\n\nimport { Button } from '@/components/ui/button'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { cn } from '@/lib/utils'\nimport { Minus, MousePointer, Plus } from 'lucide-react'\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\ntype ViewportOption = {\n  name: string\n  width: number\n}\n\nconst VIEWPORTS: ViewportOption[] = [\n  { name: 'Mobile (375px)', width: 375 },\n  { name: 'Tablet (768px)', width: 768 },\n  { name: 'Desktop (1280px)', width: 1280 },\n  { name: 'Large Desktop (1920px)', width: 1920 },\n]\n\nconst DEFAULT_VIEWPORT = VIEWPORTS[2]\nconst MIN_ZOOM = 0.1\nconst MAX_ZOOM = 1\nconst ZOOM_STEP = 0.1\n\ninterface CanvasProps {\n  url: string\n  className?: string\n  iframeRef: React.RefObject<HTMLIFrameElement | null>\n  selectedNodeId?: string\n  onSelect?: (nodeId: string) => void\n}\n\nexport default function Canvas({\n  url,\n  className,\n  iframeRef,\n  selectedNodeId,\n  onSelect,\n}: CanvasProps) {\n  const [selectedViewport, setSelectedViewport] = useState<ViewportOption | undefined>(\n    DEFAULT_VIEWPORT,\n  )\n  const [zoomLevel, setZoomLevel] = useState(1)\n  const [maxZoom, setMaxZoom] = useState(MAX_ZOOM)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n  const [inspectMode, setInspectMode] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const overlayId = 'selected-block-overlay'\n  const hoverOverlayId = 'hover-block-overlay'\n\n  const updateContainerSize = useCallback(() => {\n    if (!containerRef.current) return\n\n    const { offsetWidth, offsetHeight } = containerRef.current\n    setContainerSize({ width: offsetWidth, height: offsetHeight })\n  }, [])\n\n  const calculateMaxZoom = useCallback(() => {\n    if (!containerRef.current || !selectedViewport) return\n\n    const containerWidth = containerRef.current.offsetWidth\n    const viewportWidth = selectedViewport.width\n\n    // Calculate how much we can zoom without overflow\n    const calculatedMaxZoom = containerWidth / viewportWidth\n\n    // If we can show at 100% or more, cap at 1, otherwise use the calculated value\n    const newMaxZoom = Math.min(calculatedMaxZoom, MAX_ZOOM)\n\n    setMaxZoom(newMaxZoom)\n\n    return newMaxZoom\n  }, [selectedViewport])\n\n  // Adjust zoom when viewport changes or container is resized\n  const updateZoomLevel = useCallback(() => {\n    updateContainerSize()\n    const newMaxZoom = calculateMaxZoom()\n    if (!newMaxZoom) return\n\n    // When container size allows 100%, use 100%\n    if (newMaxZoom >= 1) {\n      setZoomLevel(1)\n    } else {\n      // Otherwise use the maximum possible zoom\n      setZoomLevel(newMaxZoom)\n    }\n  }, [calculateMaxZoom, updateContainerSize])\n\n  // Recalculate on viewport change\n  useEffect(() => {\n    if (selectedViewport) {\n      // Use timeout to ensure the containerRef is available after viewport change\n      setTimeout(updateZoomLevel, 0)\n    }\n  }, [selectedViewport, updateZoomLevel])\n\n  // Set up resize observer to watch container size changes\n  useEffect(() => {\n    if (!containerRef.current) return\n\n    const resizeObserver = new ResizeObserver(() => {\n      updateZoomLevel()\n    })\n\n    resizeObserver.observe(containerRef.current)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [updateZoomLevel])\n\n  // Also watch window resize as fallback\n  useEffect(() => {\n    window.addEventListener('resize', updateZoomLevel)\n    return () => {\n      window.removeEventListener('resize', updateZoomLevel)\n    }\n  }, [updateZoomLevel])\n\n  // Initial size measurement\n  useEffect(() => {\n    updateContainerSize()\n  }, [updateContainerSize])\n\n  const handleZoomIn = useCallback(() => {\n    setZoomLevel((prev) => Math.min(prev + ZOOM_STEP, maxZoom))\n  }, [maxZoom])\n\n  const handleZoomOut = useCallback(() => {\n    setZoomLevel((prev) => Math.max(prev - ZOOM_STEP, MIN_ZOOM))\n  }, [])\n\n  const handleViewportChange = useCallback((value: string) => {\n    const viewport = VIEWPORTS.find((v) => v.name === value)\n    if (viewport) {\n      setSelectedViewport(viewport)\n    }\n  }, [])\n\n  // Inject overlay div for selected node when it changes\n  useEffect(() => {\n    if (!iframeRef.current) return\n\n    const showOverlayAndScroll = () => {\n      const iframeDocument = iframeRef.current?.contentDocument\n      if (!iframeDocument) return\n\n      // Remove any existing overlay\n      const existingOverlay = iframeDocument.getElementById(overlayId)\n      if (existingOverlay) {\n        existingOverlay.remove()\n      }\n\n      // If no node is selected, don't create a new overlay\n      if (!selectedNodeId) return\n\n      // Find the selected element\n      const selectedElement = iframeDocument.querySelector(`[data-block-id=\"${selectedNodeId}\"]`)\n      if (!selectedElement) return\n\n      // Scroll to the selected element with smart positioning\n      // Use 'nearest' for block to avoid forcing centering when not possible\n      selectedElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest',\n      })\n\n      // Wait a bit for scroll to start, then create overlay\n      setTimeout(() => {\n        // Get scroll offsets after scrolling\n        const scrollTop = iframeDocument.documentElement.scrollTop || iframeDocument.body.scrollTop\n        const scrollLeft =\n          iframeDocument.documentElement.scrollLeft || iframeDocument.body.scrollLeft\n\n        // Create and position overlay\n        const overlay = iframeDocument.createElement('div')\n        overlay.id = overlayId\n\n        const rect = selectedElement.getBoundingClientRect()\n\n        Object.assign(overlay.style, {\n          position: 'absolute',\n          top: `${rect.top + scrollTop}px`,\n          left: `${rect.left + scrollLeft}px`,\n          width: `${rect.width}px`,\n          height: `${rect.height}px`,\n          backgroundColor: 'rgba(59, 130, 246, 0.4)',\n          pointerEvents: 'none',\n          zIndex: '9999',\n          transition: 'opacity 0.3s ease-out',\n          border: '2px solid rgba(59, 130, 246, 0.7)',\n        })\n\n        iframeDocument.body.appendChild(overlay)\n\n        // Remove overlay after 2 seconds\n        setTimeout(() => {\n          overlay.style.opacity = '0'\n          setTimeout(() => {\n            overlay?.remove()\n          }, 300) // additional time for fade out animation\n        }, 700)\n      }, 100) // Small delay to allow scroll to start\n    }\n\n    // If iframe already loaded\n    if (iframeRef.current.contentDocument?.readyState === 'complete') {\n      showOverlayAndScroll()\n    }\n\n    // Setup listener for iframe load\n    const handleIframeLoad = () => {\n      showOverlayAndScroll()\n    }\n\n    iframeRef.current.addEventListener('load', handleIframeLoad)\n\n    return () => {\n      iframeRef.current?.removeEventListener('load', handleIframeLoad)\n    }\n  }, [selectedNodeId, iframeRef])\n\n  // Handle inspect mode\n  useEffect(() => {\n    if (!iframeRef.current || !inspectMode) return\n\n    const iframeDocument = iframeRef.current.contentDocument\n    if (!iframeDocument) return\n\n    const createHoverOverlay = (targetElement: Element) => {\n      // Remove existing hover overlay\n      const existingHoverOverlay = iframeDocument.getElementById(hoverOverlayId)\n      if (existingHoverOverlay) {\n        existingHoverOverlay.remove()\n      }\n\n      // Get scroll offsets\n      const scrollTop = iframeDocument.documentElement.scrollTop || iframeDocument.body.scrollTop\n      const scrollLeft = iframeDocument.documentElement.scrollLeft || iframeDocument.body.scrollLeft\n\n      const rect = targetElement.getBoundingClientRect()\n\n      // Create overlay\n      const hoverOverlay = iframeDocument.createElement('div')\n      hoverOverlay.id = hoverOverlayId\n\n      Object.assign(hoverOverlay.style, {\n        position: 'absolute',\n        top: `${rect.top + scrollTop}px`,\n        left: `${rect.left + scrollLeft}px`,\n        width: `${rect.width}px`,\n        height: `${rect.height}px`,\n        backgroundColor: 'rgba(59, 130, 246, 0.3)',\n        pointerEvents: 'none',\n        zIndex: '9998',\n        border: '2px solid rgba(59, 130, 246, 0.6)',\n      })\n\n      iframeDocument.body.appendChild(hoverOverlay)\n    }\n\n    const removeHoverOverlay = () => {\n      const existingHoverOverlay = iframeDocument.getElementById(hoverOverlayId)\n      if (existingHoverOverlay) {\n        existingHoverOverlay.remove()\n      }\n    }\n\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!inspectMode) return\n\n      // Get element under cursor\n      const element = iframeDocument.elementFromPoint(e.clientX, e.clientY)\n      if (!element) return\n\n      // Find closest element with data-block-id\n      const targetElement = element.closest('[data-block-id]')\n      if (!targetElement) {\n        removeHoverOverlay()\n        return\n      }\n\n      createHoverOverlay(targetElement)\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      if (!inspectMode) return\n\n      // Prevent default browser behavior when in inspect mode\n      e.preventDefault()\n\n      // Get element under cursor\n      const element = iframeDocument.elementFromPoint(e.clientX, e.clientY)\n      if (!element) return\n\n      // Find closest element with data-block-id\n      const targetElement = element.closest('[data-block-id]')\n      if (!targetElement) return\n\n      const blockId = targetElement.getAttribute('data-block-id')\n      if (blockId && onSelect) {\n        onSelect(blockId)\n        setInspectMode(false)\n      }\n    }\n\n    // Add event listeners\n    iframeDocument.addEventListener('mousemove', handleMouseMove)\n    iframeDocument.addEventListener('click', handleClick)\n\n    return () => {\n      // Cleanup event listeners\n      iframeDocument.removeEventListener('mousemove', handleMouseMove)\n      iframeDocument.removeEventListener('click', handleClick)\n      removeHoverOverlay()\n    }\n  }, [inspectMode, iframeRef, onSelect])\n\n  const toggleInspectMode = useCallback(() => {\n    setInspectMode((prev) => !prev)\n  }, [])\n\n  if (!selectedViewport) return null\n\n  return (\n    <div className={cn('border flex flex-col h-full', className)}>\n      <div className=\"flex justify-between items-center p-2\">\n        <div>\n          <Select value={selectedViewport.name} onValueChange={handleViewportChange}>\n            <SelectTrigger className=\"w-[220px]\">\n              <SelectValue placeholder=\"Select viewport\" />\n            </SelectTrigger>\n            <SelectContent>\n              {VIEWPORTS.map((viewport) => (\n                <SelectItem key={viewport.name} value={viewport.name}>\n                  {viewport.name}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button\n            variant={inspectMode ? 'default' : 'outline'}\n            size=\"icon\"\n            onClick={toggleInspectMode}\n            title=\"Select to inspect\"\n            className={inspectMode ? 'bg-blue-500 text-white' : ''}\n          >\n            <MousePointer className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            onClick={handleZoomOut}\n            disabled={zoomLevel <= MIN_ZOOM}\n          >\n            <Minus className=\"h-4 w-4\" />\n          </Button>\n          <span className=\"w-12 text-center\">{Math.round(zoomLevel * 100)}%</span>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            onClick={handleZoomIn}\n            disabled={zoomLevel >= maxZoom}\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n      <div ref={containerRef} className=\"relative border overflow-hidden flex-1\">\n        <div\n          style={{\n            width: selectedViewport.width,\n            height: containerSize.height / zoomLevel,\n            transform: `scale(${zoomLevel})`,\n            transformOrigin: 'top left',\n          }}\n          className=\"mx-auto\"\n        >\n          <iframe ref={iframeRef} src={url} className=\"border-0 w-full h-full\" title=\"Preview\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  )\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  )\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  variant?: \"default\" | \"destructive\"\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n","'use client'\n\nimport { BlockEditor } from '@/components/BlockEditor'\nimport Canvas from '@/components/Canvas'\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { cn } from '@/lib/utils'\nimport { ChevronDownIcon, ChevronUpIcon, EllipsisVerticalIcon, MinusIcon } from 'lucide-react'\nimport { observer } from 'mobx-react-lite'\nimport { useEffect, useRef, useState } from 'react'\nimport { NodeRendererProps, Tree, TreeApi } from 'react-arborist'\nimport useResizeObserver from 'use-resize-observer'\nimport {\n  createStoreAndHistory,\n  StoreHistoryProvider,\n  StoreProvider,\n  useStore,\n  useStoreHistory,\n} from '@/store'\nimport { startCase } from 'lodash'\nimport { BlockSnapshotIn } from '@/store/Block'\n\nexport interface PageBuilderProps {\n  blocks: BlockSnapshotIn[] // Block snapshot definitions\n  initialData?: any\n  onDataChange?: (data: any) => void\n  onSave?: (data: any) => Promise<void>\n  onPublish?: (data: any) => Promise<void>\n  previewUrl?: string\n  saving?: boolean\n  className?: string\n}\n\nexport const PageBuilder = ({\n  blocks,\n  initialData,\n  onDataChange,\n  onSave,\n  onPublish,\n  previewUrl,\n  saving = false,\n  className,\n}: PageBuilderProps) => {\n  const [{ store, history }] = useState(() => createStoreAndHistory(blocks))\n  \n  useEffect(() => {\n    if (initialData) {\n      store.setData(initialData)\n    }\n  }, [initialData, store])\n\n  useEffect(() => {\n    if (onDataChange) {\n      onDataChange(store.data)\n    }\n  }, [store.data, onDataChange])\n\n  return (\n    <StoreProvider value={store}>\n      <StoreHistoryProvider value={history}>\n        <PageBuilderInner\n          onSave={onSave}\n          onPublish={onPublish}\n          previewUrl={previewUrl}\n          saving={saving}\n          className={className}\n        />\n      </StoreHistoryProvider>\n    </StoreProvider>\n  )\n}\n\nconst PageBuilderInner = observer(({\n  onSave,\n  onPublish,\n  previewUrl,\n  saving,\n  className,\n}: Omit<PageBuilderProps, 'blocks' | 'initialData' | 'onDataChange'>) => {\n  const store = useStore()\n  const treeRef = useRef<TreeApi<any>>(null)\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n  const treeContainer = useResizeObserver()\n\n  useEffect(() => {\n    if (!treeRef.current) return\n    if (!store.selectedNode) return\n    treeRef.current.select(store.selectedNode.id)\n  }, [store.selectedNode])\n\n  const selectedNodeId = store.selectedNode?.id\n\n  const handleSave = async () => {\n    if (onSave) {\n      await onSave(store.data)\n      iframeRef.current?.contentWindow?.postMessage('router-refresh', '*')\n    }\n  }\n\n  const handlePublish = async () => {\n    if (onPublish) {\n      await onPublish(store.data)\n    }\n  }\n\n  return (\n    <div className={cn(\"h-screen flex\", className)}>\n      <div className=\"flex flex-col\">\n        <div className=\"flex justify-between items-center p-2 border-b\">\n          <History />\n          {saving && <div>saving</div>}\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\">\n                <EllipsisVerticalIcon className=\"w-4 h-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent onCloseAutoFocus={(e) => e.preventDefault()}>\n              {onSave && (\n                <DropdownMenuItem onClick={handleSave}>\n                  Save\n                </DropdownMenuItem>\n              )}\n              {onPublish && (\n                <DropdownMenuItem onClick={handlePublish}>\n                  Publish\n                </DropdownMenuItem>\n              )}\n              <DropdownMenuItem\n                onClick={async (e) => {\n                  e.stopPropagation()\n                  store.pasteNode()\n                }}\n              >\n                Paste\n              </DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuLabel>Add Block</DropdownMenuLabel>\n              {store.blocks.map((block) => (\n                <DropdownMenuItem\n                  key={block.type}\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    store.createNode('root', 0, block.type)\n                  }}\n                >\n                  {startCase(block.type)}\n                </DropdownMenuItem>\n              ))}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n        <div ref={treeContainer.ref} className=\"flex-1 min-h-0\">\n          <Tree\n            rowHeight={40}\n            width={treeContainer.width}\n            height={treeContainer.height}\n            ref={treeRef}\n            data={store.data}\n            initialOpenState={store.openMap}\n            onMove={({ dragIds, parentId, index }) => {\n              store.moveNodes(parentId, index, dragIds)\n            }}\n            onDelete={({ ids }) => {\n              store.deleteNodes(ids)\n            }}\n            onSelect={(nodes) => {\n              const ids = nodes.map((node) => node.id)\n              if (ids.length === 1 && ids[0]) {\n                store.selectNode(ids[0])\n              }\n            }}\n            onToggle={(id) => {\n              const node = store.findNode(id)\n              if (!node) return\n              node.toggle()\n            }}\n            selectionFollowsFocus\n            children={NodeRenderer}\n          />\n        </div>\n      </div>\n      <div className=\"flex-1 min-w-0\">\n        {previewUrl && (\n          <Canvas\n            iframeRef={iframeRef}\n            url={previewUrl}\n            selectedNodeId={selectedNodeId}\n            onSelect={(id) => store.selectNode(id)}\n          />\n        )}\n      </div>\n      <div className=\"w-[300px] p-4 overflow-auto\">\n        <BlockEditor />\n      </div>\n    </div>\n  )\n})\n\nconst History = observer(() => {\n  const history = useStoreHistory()\n  return (\n    <div className=\"flex gap-2\">\n      <Button onClick={() => history.undo()} disabled={!history.canUndo}>\n        Undo\n      </Button>\n      <Button onClick={() => history.redo()} disabled={!history.canRedo}>\n        Redo\n      </Button>\n    </div>\n  )\n})\n\nconst NodeRenderer = ({ node, style, dragHandle }: NodeRendererProps<any>) => {\n  const store = useStore()\n  const [open, setOpen] = useState(false)\n\n  return (\n    <div\n      style={style}\n      ref={dragHandle}\n      className={cn(\n        'h-full flex items-center group',\n        node.isSelected && 'bg-blue-500 hover:bg-blue-400',\n        !node.isSelected && 'bg-gray-50 hover:bg-gray-100',\n      )}\n    >\n      <Button\n        disabled={node.children?.length === 0}\n        variant=\"ghost\"\n        size=\"icon\"\n        className=\"bg-transparent hover:bg-transparent\"\n        onClick={(e) => {\n          e.stopPropagation()\n          node.toggle()\n        }}\n      >\n        <>\n          {node.children?.length === 0 ? (\n            <MinusIcon className=\"w-4 h-4\" />\n          ) : node.isClosed ? (\n            <ChevronDownIcon className=\"w-4 h-4\" />\n          ) : (\n            <ChevronUpIcon className=\"w-4 h-4\" />\n          )}\n        </>\n      </Button>\n\n      <div className=\"flex-1\">{node.data.name}</div>\n      <DropdownMenu open={open} onOpenChange={setOpen}>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className={cn('opacity-0 group-hover:opacity-100 transition', open && 'opacity-100')}\n          >\n            <EllipsisVerticalIcon className=\"w-4 h-4\" />\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent onCloseAutoFocus={(e) => e.preventDefault()}>\n          <DropdownMenuItem\n            onClick={(e) => {\n              e.stopPropagation()\n              store.copyNode(node.id)\n              setOpen(false)\n            }}\n          >\n            Copy\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            onClick={async (e) => {\n              e.stopPropagation()\n              store.pasteNode(node.id)\n              setOpen(false)\n            }}\n          >\n            Paste\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            onClick={(e) => {\n              e.stopPropagation()\n              store.duplicateNode(node.id)\n            }}\n          >\n            Duplicate\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            onClick={(e) => {\n              e.stopPropagation()\n              store.deleteNodes([node.id])\n            }}\n          >\n            Delete\n          </DropdownMenuItem>\n          <DropdownMenuSeparator />\n          <DropdownMenuLabel>Add Block</DropdownMenuLabel>\n          {store.blocks.map((block) => (\n            <DropdownMenuItem\n              key={block.type}\n              onClick={(e) => {\n                e.stopPropagation()\n                store.createNode(node.id, 0, block.type)\n              }}\n            >\n              {startCase(block.type)}\n            </DropdownMenuItem>\n          ))}\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>\n  )\n}"],"mappings":"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","names":["observer","observer","types","jsx","types","jsx","jsx","jsx","jsxs","types","jsx","observer","types","startCase","jsx","jsxs","types","observer","observer","types","startCase","useId","jsx","jsxs","types","observer","CheckIcon","ChevronDownIcon","jsx","jsxs","jsx","jsxs","ChevronDownIcon","jsxs","jsx","CheckIcon","jsx","ChevronDownIcon","observer","types","startCase","useId","jsx","jsxs","types","observer","value","observer","types","startCase","useId","jsx","jsxs","types","observer","observer","types","jsx","jsxs","jsx","jsxs","jsx","useId","startCase","jsx","jsxs","types","observer","useId","observer","types","jsx","startCase","useId","useState","jsx","jsxs","types","observer","useId","useState","startCase","observer","types","useState","useId","startCase","jsx","jsxs","types","observer","useId","useState","response","Fragment","jsx","jsxs","types","observer","types","types","getSnapshot","types","startCase","jsx","jsxs","observer","useEffect","useRef","useState","jsx","jsxs","CheckIcon","jsx","jsxs","jsx","jsx","jsx","ChevronDownIcon","ChevronUpIcon","observer","useEffect","useRef","useState","startCase","Fragment","jsx","jsxs","useState","useEffect","observer","useRef","ChevronDownIcon","ChevronUpIcon"]}